print ("Hello World!")
#data processing
#importing dataset
dataset = read.csv("Data.csv")
#take care of missin data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)   # first par = condition (if value = NaN)
# second par = replacement policy (when condition is true)
#              replaces the value with a mean function
# third par = do nothing (when condition is false)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
#encoding categorical data
dataset$Country = factor(dataset$Country,
levels = c("France", "Spain", "Germany"),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c("Yes", "No"),
labels = c(1,0))
#splitting the dataset into the Training set and Test set
#install.packages("caTools")
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
setwd("~/MachineLearningCourse/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing")
test_set = scale(test_set)
test_set[, 2:3] = scale(test_set[, 2:3])
dataset = read.csv("Data.csv")
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
dataset$Country = factor(dataset$Country,
levels = c("France", "Spain", "Germany"),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c("Yes", "No"),
labels = c(1,0))
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#Feature Scaling
training_set[, 2:3] = scale(training_set[, 2:3])  #so fking stupid isn't it?
test_set[, 2:3] = scale(test_set[, 2:3])
View(training_set)
View(training_set)
View(test_set)
View(test_set)
View(dataset)
